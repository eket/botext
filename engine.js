// Generated by CoffeeScript 1.6.3
(function() {
  var map, render_scene, render_verb, render_word, state, __,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  __ = function() {
    console.log.apply(console, arguments);
    return arguments[0];
  };

  map = window.Map;

  state = {
    scene: 'street'
  };

  render_scene = function(scene) {
    var el, v, _i, _len, _ref, _results;
    $('#verbs').empty();
    $('#words').empty();
    _ref = _.keys(map[scene]);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      v = _ref[_i];
      el = $("<div class='left button'>" + v + "</div>");
      el.on('mouseup', (function(v) {
        return function() {
          return render_verb(v);
        };
      })(v));
      _results.push($('#verbs').append(el));
    }
    return _results;
  };

  render_verb = function(verb) {
    var ce, el, node, w, _i, _len, _ref, _results;
    node = map[state.scene][state.verb];
    $('#verbs').empty();
    $('#words').empty();
    state.verb = verb;
    ce = $("<div class='selected left button'>" + verb + "</div>");
    $('#verbs').fadeIn(100);
    ce.on('mouseup', function() {
      return render_scene(state.scene);
    });
    $('#verbs').append(ce);
    _ref = _.keys(map[state.scene][verb]);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      w = _ref[_i];
      el = $("<div class='right button'>" + w + "</div>");
      el.on('mouseup', (function(w) {
        return function() {
          return render_word(w);
        };
      })(w));
      el.on('mouseenter', (function(el) {
        return function() {
          return $('.selected.button').css({
            top: (el.position().top) + 'px'
          });
        };
      })(el));
      _results.push($('#words').append(el));
    }
    return _results;
  };

  render_word = function(word) {
    var a, node, sk, sv, vk, vv, wk, wv, _base, _ref;
    node = map[state.scene][state.verb][word];
    if (node.t != null) {
      if (node.scene != null) {
        $('#page').append("<pre class='inter'>***");
      }
      if (node.img != null) {
        $('#page').append("<pre class='inter'><img src='img/" + node.i + "'></pre>");
      }
      $('#page').append("<pre>    " + node.t);
      $('#page').scrollTop($('#page')[0].scrollHeight);
      _ref = node.set;
      for (sk in _ref) {
        sv = _ref[sk];
        if (map[sk] == null) {
          map[sk] = sv;
        }
        for (vk in sv) {
          vv = sv[vk];
          if ((_base = map[sk])[vk] == null) {
            _base[vk] = vv;
          }
          for (wk in vv) {
            wv = vv[wk];
            map[sk][vk][wk] = wv;
          }
        }
      }
      for (sk in map) {
        sv = map[sk];
        for (vk in sv) {
          vv = sv[vk];
          for (wk in vv) {
            wv = vv[wk];
            if (__indexOf.call(node.del, wk) >= 0) {
              delete vv[wk];
            }
          }
          if (__indexOf.call(node.del, vk) >= 0 || _.isEmpty(sv[vk])) {
            delete sv[vk];
          }
        }
      }
      if (_.isEmpty(node.del)) {
        map[state.scene][state.verb] = {};
      }
    } else {
      $('#page').append("<pre>    " + map[state.scene][state.verb][word]);
      $('#page').scrollTop($('#page')[0].scrollHeight);
    }
    a = state;
    try {
      delete map[state.scene][state.verb][word];
    } catch (_error) {}
    if (_.isEmpty(_.keys(map[state.scene][state.verb]))) {
      delete map[state.scene][state.verb];
    }
    if (node.scene != null) {
      state = {
        scene: node.scene
      };
    }
    if (node.one != null) {
      delete map[state.scene][state.verb];
    }
    if (node.bg != null) {
      $('body').css({
        background: "url(img/" + node.bg + ")"
      });
    }
    if (node.answ != null) {
      $('#page').append("- " + node.answ);
    }
    return render_scene(state.scene);
  };

  state.scene = map.opening.sc;

  render_scene(state.scene);

  $('#page').append("<pre class='inter title'>" + map.opening.title);

  $('#page').append("<pre>    " + map.opening.t);

  $('#page').scrollTop($('#page')[0].scrollHeight);

}).call(this);

/*
//@ sourceMappingURL=engine.map
*/
